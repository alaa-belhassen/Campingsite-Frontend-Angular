import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { ReclamationService } from 'src/app/services/reclamation.service';
import { SuiviReclamationService } from 'src/app/services/suivi-reclamation.service';
import { SuiviReclamation } from 'src/app/models/suivi-reclamation.model';

@Component({
  selector: 'app-open-reclamation',
  templateUrl: './open-reclamation.component.html',
  styleUrls: ['./open-reclamation.component.scss']
})
export class OpenReclamationComponent implements OnInit {
  reclamationId: number;
  reclamation: any = {}; // Initialize as an empty object to avoid undefined errors
  reply: string = ''; // Property to hold the reply description
  byWho: number;
  selectedOption: string;
  options: string[] = ['Pending_Client_Response', 'Pending_Admin_Response', 'Solved', 'Closed', 'Rejected'];

  constructor(
    private route: ActivatedRoute,
    private reclamationService: ReclamationService,
    private suiviReclamationService: SuiviReclamationService
  ) { }

  ngOnInit(): void {
    this.reclamationId = +this.route.snapshot.paramMap.get('id');
    this.loadReclamation(this.reclamationId);
    this.byWho = 2;
  }

  loadReclamation(id: number) {
    // Fetch the reclamation
    this.reclamationService.getReclamationById(id).subscribe((data: any) => {
      this.reclamation = data;
      // Fetch the suivi reclamations
      this.suiviReclamationService.getSuiviReclamations().subscribe((suiviReclamations: SuiviReclamation[]) => {
        // Filter suivi reclamations related to the current reclamation
        this.reclamation.suiviReclamations = suiviReclamations.filter((suiviRec: SuiviReclamation) => suiviRec.idReclamation === id);
      });
    });
  }

  submitReply() {
    // Create a new SuiviReclamation object
    const suiviReclamation = new SuiviReclamation(
      null, // idSuiviRec is set to null, assuming it's autogenerated by the backend
      this.reclamationId, // idReclamation
      new Date(), // dateSuiviRec
      this.reply, // descSuivi
      this.byWho // ByWho
    );

    console.log(suiviReclamation); // Log the suiviReclamation object to check the ByWho value

    // Assign the ByWho value again just to make sure
    suiviReclamation.byWho = this.byWho;

    // Update the reclamation status
    if (this.selectedOption) {
      this.reclamation.statutReclamation = this.selectedOption;
      console.log(this.reclamation.statutReclamation);
      console.log(this.reclamation.idReclamation);
      // Update the reclamation status on the backend
      this.reclamationService.updateReclamation(this.reclamation).subscribe(() => {
        // Call the service to create the suiviReclamation
        this.suiviReclamationService.createSuiviReclamation(suiviReclamation).subscribe(() => {
          // Reset the reply input and selected option after successful submission
          this.reply = '';
          this.selectedOption = '';
          // Optionally, you can reload the reclamation data after adding the suivi reclamation
          this.loadReclamation(this.reclamationId);
        });
      });
    }
  }
}
